# Generated by Django 5.0.6 on 2024-06-18 02:26

import authentication.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        db_column="nome_do_usuário",
                        help_text="Digite o username",
                        max_length=150,
                        unique=True,
                        verbose_name="Nome de usuário",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        db_column="email",
                        help_text="Digite o email do usuário",
                        max_length=254,
                        unique=True,
                        verbose_name="Email do usuário",
                    ),
                ),
                (
                    "data_nascimento",
                    models.DateField(
                        blank=True,
                        db_column="data_de_nascimento",
                        help_text="Digite sua data de nascimento",
                        null=True,
                        verbose_name="Data de nascimento",
                    ),
                ),
                (
                    "genero",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M", "Masculino"),
                            ("F", "Feminino"),
                            ("O", "Outro"),
                            ("P", "Prefiro não dizer"),
                        ],
                        db_column="genero",
                        help_text="Gênero do usuário",
                        max_length=1,
                        null=True,
                        verbose_name="Gênero",
                    ),
                ),
                (
                    "telefone",
                    models.CharField(
                        blank=True,
                        db_column="telefone",
                        help_text="Digite seu número de celular ou telefone",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "Usuário",
            },
            managers=[
                ("objects", authentication.models.UserManager()),
            ],
        ),
    ]
